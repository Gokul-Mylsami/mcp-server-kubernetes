name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch: 
    inputs:
      force-run:
        description: 'Force run the workflow'
        required: false
        default: false
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --driver=docker
          minikube status
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
          
      - name: Configure kubectl to work with both proxy and direct access
        run: |
          # Create a backup of the original kubeconfig for direct access
          cp ~/.kube/config ~/.kube/config.direct
          
          # Start the proxy in background for most operations
          kubectl proxy --port=8080 &
          echo "KUBECTL_PROXY_PID=$!" >> $GITHUB_ENV
          
          # Give the proxy a moment to start
          sleep 3
          
          # For most operations, use the proxy by updating the server URL
          sed -i 's|https://192.168.49.2:8443|http://localhost:8080|g' ~/.kube/config
          
          # Verify the proxy works
          kubectl get nodes

      - name: Run tests with kubectl cp fix
        run: |
          # Set environment variable to tell our MCP server about the direct kubeconfig
          export KUBECONFIG_DIRECT="$HOME/.kube/config.direct"
          
          # Run tests with both default and JUnit reporters
          bun run test --reporter default --reporter junit --outputFile junit-results.xml

      - name: Test Report
        uses: dorny/test-reporter@v2
        if: always()
        with:
          name: Bun Tests
          path: junit-results.xml
          reporter: jest-junit
          fail-on-error: true

      - name: Verify build works
        run: bun run build

      - name: Clean up kubectl proxy
        if: always()
        run: |
          if [ -n "$KUBECTL_PROXY_PID" ]; then
            echo "Stopping kubectl proxy (PID: $KUBECTL_PROXY_PID)"
            kill $KUBECTL_PROXY_PID || true
          fi